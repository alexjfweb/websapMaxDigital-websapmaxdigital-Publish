// src/lib/firebase.ts

import { initializeApp, getApps, getApp, type FirebaseApp } from 'firebase/app';
import { getFirestore, type Firestore } from 'firebase/firestore';
import { getAuth, type Auth } from 'firebase/auth';
import { getStorage } from 'firebase/storage';
import { firebaseConfig, isFirebaseConfigValid } from './firebase-config';

// Variable para almacenar la instancia de la app de Firebase
let app: FirebaseApp;

// Verifica si la configuraci√≥n de Firebase es v√°lida al cargar el m√≥dulo
if (!isFirebaseConfigValid()) {
    console.error("‚ùå Configuraci√≥n de Firebase inv√°lida. La aplicaci√≥n no puede iniciarse.");
    // Podr√≠amos lanzar un error aqu√≠ para detener la ejecuci√≥n, 
    // pero en el contexto del cliente es mejor manejarlo en los componentes.
}

// Inicializaci√≥n Singleton: Se ejecuta solo una vez.
if (getApps().length === 0) {
    try {
        console.log("üî• Inicializando Firebase por primera vez...");
        app = initializeApp(firebaseConfig);
        console.log("‚úÖ Firebase inicializado correctamente.");
    } catch(e) {
        console.error("üö® ERROR CR√çTICO AL INICIALIZAR FIREBASE:", e);
        // En un escenario real, aqu√≠ podr√≠as notificar a un servicio de monitoreo.
        // Se crea una 'app' vac√≠a para evitar que el resto del c√≥digo falle, aunque no funcionar√°.
        app = {} as FirebaseApp;
    }
} else {
    // console.log("‚ôªÔ∏è Reutilizando instancia de Firebase existente...");
    app = getApp();
}

// Exporta la instancia de la app para quien la necesite.
export const firebaseApp = app;

// Storage por defecto (para archivos generales)
export const storage = getStorage(app);

// Storage personalizado para im√°genes del men√∫
export const menuImagesStorage = getStorage(app, "gs://websapmax-images");


// Exporta funciones para obtener los servicios espec√≠ficos.
// Estas funciones ahora son seguras de llamar en cualquier parte de la app.
export function getDb(): Firestore {
  return getFirestore(app);
}

export function getFirebaseAuth(): Auth {
  return getAuth(app);
}

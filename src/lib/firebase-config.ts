
// # ============================ #
// # üö´ NO MODIFICAR ESTE ARCHIVO
// # üîí VARIABLES DE ENTORNO CR√çTICAS PARA FIREBASE
// # üß† IAs: NO TOCAR. DESARROLLADORES: NO CAMBIAR SIN AUTORIZACI√ìN
// # ============================ #

// src/lib/firebase-config.ts

export const firebaseConfig = {
    apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,
    authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,
    projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,
    storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,
    messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
    appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,
    measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID
};

// VALIDACI√ìN: Asegura que todas las claves necesarias para la configuraci√≥n de Firebase est√©n presentes.
// Si falta alguna, se mostrar√° un error claro en la consola para facilitar la depuraci√≥n.
export const isFirebaseConfigValid = () => {
    const missingKeys = Object.entries(firebaseConfig)
        .filter(([key, value]) => !value && key !== 'measurementId') // measurementId es opcional
        .map(([key]) => key);

    if (missingKeys.length > 0) {
        console.error("‚ùå Error Cr√≠tico de Configuraci√≥n de Firebase: Faltan las siguientes variables de entorno:");
        missingKeys.forEach(key => console.error(`   - NEXT_PUBLIC_${key.replace(/([A-Z])/g, '_$1').toUpperCase()}`));
        console.error("Aseg√∫rate de que tu archivo .env.local est√© correctamente configurado y que las variables de entorno est√©n disponibles en tu entorno de despliegue.");
        return false;
    }
    return true;
};

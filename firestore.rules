rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Regla de denegación por defecto para asegurar que nada sea público por accidente.
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Permite la lectura pública de la configuración y los planes de la landing.
    match /landing_configs/{docId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.role == 'superadmin';
    }
    
    match /landingPlans/{planId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.role == 'superadmin';
    }
    
    // Permite a los usuarios leer su propio documento.
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      // Solo el superadmin puede crear o eliminar usuarios directamente aquí.
      allow create, delete: if request.auth != null && request.auth.token.role == 'superadmin';
    }

    // Reglas para las compañías
    match /companies/{companyId} {
      // Cualquiera puede leer la info pública de una compañía (para el menú).
      allow read: if true; 
      // Solo el admin de esa compañía o un superadmin pueden actualizar.
      allow update: if request.auth != null && (request.auth.token.companyId == companyId || request.auth.token.role == 'superadmin');
      allow create: if request.auth != null; // Cualquiera autenticado puede registrar una empresa.
    }
    
    // Reglas para los platos: dependen de la compañía
    match /dishes/{dishId} {
      // Cualquiera puede leer los platos (para el menú público).
      allow read: if true;
      // Solo un admin de la compañía puede crear, actualizar o eliminar platos.
      allow create, update, delete: if request.auth != null && request.auth.token.companyId == resource.data.companyId;
    }
    
    // Reglas para pedidos, reservas, mesas, etc.
    // Solo se permite el acceso si el usuario pertenece a la compañía correcta.
    match /{collection}/{docId} {
      allow read, write: if request.auth != null && request.auth.token.companyId == resource.data.restaurantId;
    }
    
    // Reglas para logs
    match /globalAuditLogs/{logId} {
        allow read, write: if request.auth != null && request.auth.token.role == 'superadmin';
    }
    match /table_logs/{logId} {
        allow read, write: if request.auth != null && request.auth.token.role == 'superadmin';
    }
    
     // Tickets de soporte
    match /supportTickets/{ticketId} {
      // El usuario que lo creó o un superadmin pueden leerlo/actualizarlo.
      allow read, update: if request.auth != null && (request.auth.uid == resource.data.userId || request.auth.token.role == 'superadmin');
      // Cualquiera autenticado puede crear un ticket.
      allow create: if request.auth != null;
    }
  }
}

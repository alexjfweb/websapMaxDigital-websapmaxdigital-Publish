
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    // ================== PUBLIC COLLECTIONS ==================
    // Landing page configuration and plans can be read by anyone.
    // Writes are restricted to superadmins.
    
    match /landing_configs/{docId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.role == 'superadmin';
    }

    match /landingPlans/{planId} {
      // Anyone can read active and public plans for the landing page
      allow read: if resource.data.isActive == true && resource.data.isPublic == true;
      
      // Superadmins can read all plans and write to them
      allow list, write: if request.auth != null && request.auth.token.role == 'superadmin';
      allow get: if request.auth != null && request.auth.token.role == 'superadmin';
    }

    // ================== USER DATA ==================
    // Users can read/update their own data.
    // Superadmins can read/write any user data.
    
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow list, write, create, delete: if request.auth != null && request.auth.token.role == 'superadmin';
    }

    // ================== COMPANY-SPECIFIC DATA ==================
    // Data tied to a specific company (restaurant).
    // Access is granted if the user is an admin or employee of that company.
    
    function isCompanyMember(companyId) {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.companyId == companyId;
    }
    
    function isCompanyAdmin(companyId) {
      return isCompanyMember(companyId) && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /companies/{companyId} {
      // Company members can read their own company data.
      allow read: if isCompanyMember(companyId);
      // Only admins of the company or superadmins can update it.
      allow update: if isCompanyAdmin(companyId) || request.auth.token.role == 'superadmin';
      // Only superadmins can create/delete companies.
      allow create, delete, list: if request.auth.token.role == 'superadmin';
    }
    
    match /dishes/{dishId} {
      // Public menu can read dishes
      allow get: if true;
      // Company members can list their dishes.
      allow list: if isCompanyMember(resource.data.companyId);
      // Company admins or superadmins can create, update, delete.
      allow write: if isCompanyMember(request.resource.data.companyId);
    }
    
    match /orders/{orderId} {
        // Public users can create orders (e.g., from the menu)
        allow create: if true;
        // Company members can read and update their orders.
        allow read, update: if isCompanyMember(resource.data.restaurantId);
        // Superadmins have full access.
        allow list, delete: if request.auth.token.role == 'superadmin';
    }
    
    match /reservations/{reservationId} {
        // Public users can create reservations
        allow create: if true;
        // Company members can manage their reservations.
        allow read, update: if isCompanyMember(resource.data.restaurantId);
        // Superadmins have full access.
        allow list, delete: if request.auth.token.role == 'superadmin';
    }

    match /tables/{tableId} {
      // Company members can manage their tables.
      allow read, write: if isCompanyMember(request.resource.data.restaurantId);
      // Superadmins have full access.
      allow list, delete: if request.auth.token.role == 'superadmin';
    }

    // ================== CONFIGURATION & LOGS (SUPERADMIN ONLY) ==================
    // These collections should only be accessible by superadmins.
    
    match /configuration/{docId} {
        allow read, write: if request.auth != null && request.auth.token.role == 'superadmin';
    }
    
    match /supportTickets/{ticketId} {
        // Users can create tickets
        allow create: if request.auth != null;
        // Only superadmins can read/update them
        allow read, write: if request.auth != null && request.auth.token.role == 'superadmin';
    }
    
    match /payment_methods/{docId} {
        allow read, write: if request.auth != null && request.auth.token.role == 'superadmin';
    }

    match /globalAuditLogs/{logId} {
        allow read, list: if request.auth != null && request.auth.token.role == 'superadmin';
        // Writes are handled by backend services.
        allow write: if false; 
    }
  }
}

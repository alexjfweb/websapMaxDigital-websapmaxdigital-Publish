
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    // Permite lectura pública para la configuración de la landing y los planes.
    // Esto es necesario para que cualquier visitante pueda ver la página de inicio.
    match /landing_configs/{docId} {
      allow read: if true;
      allow write: if request.auth != null; // Solo usuarios autenticados pueden escribir (ej. superadmin)
    }
    
    match /landingPlans/{planId} {
      allow read: if true;
      allow write: if request.auth != null; // Solo usuarios autenticados pueden escribir (ej. superadmin)
    }
    
    // Reglas para los usuarios.
    // Un usuario puede leer sus propios datos. Nadie más puede.
    // La creación es pública (registro), pero la actualización y borrado solo la puede hacer el propio usuario.
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if true;
    }
    
    // Reglas para las compañías.
    // Los datos de una compañía solo pueden ser leídos por sus empleados/admins.
    match /companies/{companyId} {
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.companyId == companyId;
      allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.companyId == companyId;
      allow create: if request.auth != null; // Permitir a usuarios autenticados crear una compañía.
    }
    
    // Reglas para los platos.
    // Cualquiera puede leerlos (para el menú público).
    // Solo los empleados de la compañía pueden crearlos, actualizarlos o borrarlos.
    match /dishes/{dishId} {
        allow read: if true;
        allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.companyId == resource.data.companyId;
    }

    // Reglas para los pedidos.
    // Solo los empleados pueden leerlos. 
    // La creación puede ser anónima si viene del menú público (se ajustará con API segura).
    match /orders/{orderId} {
        allow read, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.companyId == resource.data.restaurantId;
        allow create: if true;
    }
    
    // Reglas para las reservas.
    match /reservations/{reservationId} {
      allow read, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.companyId == resource.data.restaurantId;
      allow create: if true; // Permite que cualquiera cree una reserva.
    }
    
     // Reglas para las mesas.
    match /tables/{tableId} {
      allow read: if true; // Todos pueden leer el estado de las mesas
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.companyId == resource.data.restaurantId;
    }
    
    // Denegar todo por defecto para las demás colecciones
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

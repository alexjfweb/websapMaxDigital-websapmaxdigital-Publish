// REGLAS DE FIRESTORE CORREGIDAS Y SEGURAS
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ‚úÖ LANDING CONFIG - Lectura p√∫blica (sin autenticaci√≥n) para el documento 'main'
    match /landing_configs/main {
      allow read: if true;
      // Solo superadmins pueden escribir
      allow write: if request.auth != null && request.auth.token.role == 'superadmin';
    }
    
    // ‚úÖ PLANES DE SUSCRIPCI√ìN - Lectura p√∫blica solo de planes activos y p√∫blicos
    match /landingPlans/{planId} {
      allow read: if resource.data.isActive == true && resource.data.isPublic == true;
      // Solo superadmins pueden escribir
      allow write: if request.auth != null && request.auth.token.role == 'superadmin';
    }
    
    // ‚úÖ Tickets de Soporte - Los usuarios autenticados pueden crear. Superadmins pueden leer/escribir.
    match /supportTickets/{ticketId} {
       allow create: if request.auth != null;
       allow read, write: if request.auth != null && request.auth.token.role == 'superadmin';
    }

    // ‚úÖ Mesas - Los admins pueden gestionar sus mesas
    match /tables/{tableId} {
        allow read, write: if request.auth != null && request.resource.data.restaurantId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.companyId;
    }
     
    // ‚úÖ USUARIOS - El usuario puede leer/escribir sus propios datos. Superadmin puede gestionar todos.
    match /users/{userId} {
      allow read, write: if request.auth != null && (request.auth.uid == userId || request.auth.token.role == 'superadmin');
    }
    
    // ‚úÖ COMPA√ë√çAS - Admin puede leer/escribir datos de su propia compa√±√≠a. Superadmin puede gestionar todas.
    match /companies/{companyId} {
       allow read, write: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.companyId == companyId || request.auth.token.role == 'superadmin');
    }
    
    // ‚úÖ PEDIDOS, PLATOS, RESERVAS - Solo accesibles si el usuario pertenece a la compa√±√≠a correcta.
    match /orders/{orderId} {
       allow read, write: if request.auth != null && request.resource.data.restaurantId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.companyId;
       allow create: if true; // Permite a usuarios no autenticados crear pedidos desde el men√∫ p√∫blico
    }
    
    match /dishes/{dishId} {
       allow read: if true; // Lectura p√∫blica para el men√∫
       allow write: if request.auth != null && request.resource.data.companyId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.companyId;
    }

    match /reservations/{reservationId} {
        allow create: if true; // Permite a cualquiera crear una reserva
        allow read, write: if request.auth != null && request.resource.data.restaurantId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.companyId;
    }
    
    // üîí Por defecto, denegar todo lo dem√°s
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

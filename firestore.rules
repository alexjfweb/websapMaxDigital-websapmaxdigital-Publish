rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // LANDING: Allow public read for landing page config and plans
    match /landing_configs/{docId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.role == 'superadmin';
    }
    
    match /landingPlans/{planId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.role == 'superadmin';
    }

    // USERS: Secure user data
    match /users/{userId} {
      // Any authenticated user can create their own user document
      allow create: if request.auth != null && request.auth.uid == userId;
      // Users can only read/update their own data
      allow read, update: if request.auth != null && request.auth.uid == userId;
      // Superadmins can do anything
      allow write, delete: if request.auth != null && request.auth.token.role == 'superadmin';
    }

    // COMPANIES: Secure company data
    match /companies/{companyId} {
      // Superadmins can read all companies
      allow read: if request.auth != null && (request.auth.token.role == 'superadmin' || request.auth.token.companyId == companyId);
      // Only superadmins can create/delete companies
      allow create, delete: if request.auth != null && request.auth.token.role == 'superadmin';
      // Admins can update their own company
      allow update: if request.auth != null && (request.auth.token.role == 'superadmin' || (request.auth.token.role == 'admin' && request.auth.token.companyId == companyId));
    }
    
    // DISHES, ORDERS, RESERVATIONS, TABLES: Only accessible by company members
    match /dishes/{dishId} {
      allow read: if true; // Public read for menus
      allow write: if request.auth != null && request.auth.token.companyId == resource.data.companyId;
    }
    
    match /orders/{orderId} {
        allow create: if true; // Anyone can create an order
        allow read, update: if request.auth != null && request.auth.token.companyId == resource.data.restaurantId;
        allow delete: if request.auth != null && request.auth.token.role == 'superadmin';
    }

    match /reservations/{resId} {
        allow create: if true; // Anyone can create a reservation
        allow read, update: if request.auth != null && request.auth.token.companyId == resource.data.restaurantId;
        allow delete: if request.auth != null && request.auth.token.role == 'superadmin';
    }
    
    match /tables/{tableId} {
        allow read: if true; // Public read for tables status
        allow write: if request.auth != null && request.auth.token.companyId == resource.data.restaurantId;
    }

    // AUDIT LOGS: Superadmin only
    match /globalAuditLogs/{logId} {
      allow read, write: if request.auth != null && request.auth.token.role == 'superadmin';
    }
    
    match /planAuditLogs/{logId} {
        allow read, write: if request.auth != null && request.auth.token.role == 'superadmin';
    }

    // CONFIGURATION: Superadmin only
    match /configuration/{configId} {
        allow read, write: if request.auth != null && request.auth.token.role == 'superadmin';
    }
    
    // SUPPORT TICKETS: Users can create, admins can manage
    match /supportTickets/{ticketId} {
        allow create: if request.auth != null;
        allow read, update: if request.auth != null && (request.auth.token.role == 'superadmin' || request.auth.uid == resource.data.userId);
    }
    
     // PAYMENT METHODS & CONFIGS: Secure, superadmin only
    match /payment_methods/{docId} {
      allow read, write: if request.auth != null && request.auth.token.role == 'superadmin';
    }
    
    match /payment_configs/{companyId} {
       allow read, update: if request.auth != null && (request.auth.token.role == 'superadmin' || request.auth.token.companyId == companyId);
       allow create: if request.auth != null;
    }

    // Default deny all other reads/writes
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
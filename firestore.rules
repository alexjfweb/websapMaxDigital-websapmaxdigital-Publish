rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for superadmin role
    function isSuperAdmin() {
      return request.auth != null && request.auth.token.role == 'superadmin';
    }

    // Helper function to check if the user is an admin of the requested company
    function isAdminOfCompany(companyId) {
      return request.auth != null && 
             request.auth.token.role == 'admin' &&
             request.auth.token.companyId == companyId;
    }

    // Helper function to check if the user is an employee of the requested company
    function isEmployeeOfCompany(companyId) {
      return request.auth != null && 
             request.auth.token.role == 'employee' &&
             request.auth.token.companyId == companyId;
    }

    // Landing Page Data: Publicly readable
    match /landingPlans/{planId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    match /landing_configs/{configId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    // Companies: Only superadmins can manage all companies
    match /companies/{companyId} {
      allow read: if isSuperAdmin() || isAdminOfCompany(companyId);
      allow create, update: if isSuperAdmin() || isAdminOfCompany(companyId);
      allow delete: if isSuperAdmin();
    }

    // Users: Users can read their own data. Admins/SuperAdmins have broader access.
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isSuperAdmin());
      allow create; // Allow user creation during registration
      allow update: if request.auth != null && (request.auth.uid == userId || isSuperAdmin());
      allow delete: if isSuperAdmin();
    }

    // Dishes: Public read for menus, write access for company staff
    match /dishes/{dishId} {
      allow read: if true;
      allow write: if isSuperAdmin() || isAdminOfCompany(resource.data.companyId) || isEmployeeOfCompany(resource.data.companyId);
    }
    
    // Orders: Only company staff can access
    match /orders/{orderId} {
        allow read, write: if isSuperAdmin() || isAdminOfCompany(resource.data.restaurantId) || isEmployeeOfCompany(resource.data.restaurantId);
        // Public can create orders
        allow create: if true;
    }

    // Reservations: Public can create, company staff can manage
    match /reservations/{reservationId} {
        allow read, write: if isSuperAdmin() || isAdminOfCompany(resource.data.restaurantId) || isEmployeeOfCompany(resource.data.restaurantId);
        // Public can create reservations
        allow create: if true;
    }

    // Tables: Only company staff can access
    match /tables/{tableId} {
        allow read, write: if isSuperAdmin() || isAdminOfCompany(resource.data.restaurantId) || isEmployeeOfCompany(resource.data.restaurantId);
    }

    // Support Tickets: Only involved users or superadmins
    match /supportTickets/{ticketId} {
      allow read, update: if isSuperAdmin() || (request.auth != null && request.auth.uid == resource.data.userId);
      allow create: if request.auth != null;
    }

    // Navigation Config: Only superadmin
    match /configuration/main-navigation {
        allow read: if request.auth != null;
        allow write: if isSuperAdmin();
    }
    
    // Payment Configs: Only superadmin
    match /payment_configs/{companyId} {
        allow read, write: if isSuperAdmin() || isAdminOfCompany(companyId);
    }

    // Audit Logs: Only superadmin access
    match /globalAuditLogs/{logId} {
      allow read, write: if isSuperAdmin();
    }
    match /planAuditLogs/{logId} {
      allow read, write: if isSuperAdmin();
    }
    match /table_logs/{logId} {
        allow read, write: if isSuperAdmin();
    }
  }
}
